{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/lib/supabase/server.ts"],"sourcesContent":["\r\nimport { cookies } from 'next/headers';\r\nimport { createServerClient, type CookieOptions } from '@supabase/ssr';\r\n\r\nexport async function createSupabaseServer() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch {\r\n            // no-op in RSC (only works in route handlers/actions)\r\n          }\r\n        },\r\n        remove(name: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value: '', ...options });\r\n          } catch {\r\n            // no-op in RSC\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAM;gBACN,sDAAsD;gBACxD;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAM;gBACN,eAAe;gBACjB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/api/events/reorder/route.ts"],"sourcesContent":["\r\nimport { NextResponse } from 'next/server';\r\nimport { createSupabaseServer } from '../../../../../lib/supabase/server';\r\n\r\nexport const runtime = 'nodejs';\r\n\r\nexport async function POST(req: Request) {\r\n  const supabase = await createSupabaseServer();\r\n  const { data: { user } } = await supabase.auth.getUser();\r\n  if (!user) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n\r\n  const { ids } = await req.json();\r\n  if (!Array.isArray(ids)) return NextResponse.json({ error: 'Bad body' }, { status: 400 });\r\n\r\n  for (let i = 0; i < ids.length; i++) {\r\n    const { error } = await supabase.from('events').update({ order: i }).eq('id', ids[i]);\r\n    if (error) return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n  return NextResponse.json({ ok: true, count: ids.length });\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAEO,MAAM,UAAU;AAEhB,eAAe,KAAK,GAAY;IACrC,MAAM,WAAW,MAAM,CAAA,GAAA,2HAAA,CAAA,uBAAoB,AAAD;IAC1C,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IACtD,IAAI,CAAC,MAAM,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAe,GAAG;QAAE,QAAQ;IAAI;IAE7E,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,IAAI;IAC9B,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAW,GAAG;QAAE,QAAQ;IAAI;IAEvF,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,MAAM,CAAC;YAAE,OAAO;QAAE,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QACpF,IAAI,OAAO,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,IAAI;QAAM,OAAO,IAAI,MAAM;IAAC;AACzD","debugId":null}}]
}