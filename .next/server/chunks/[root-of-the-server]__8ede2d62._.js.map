{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/lib/supabase/anon-server.ts"],"sourcesContent":["\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nexport function createSupabaseServerAnon() {\r\n  return createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      auth: { persistSession: false, autoRefreshToken: false },\r\n      global: { headers: {} },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,sUAGhB;QACE,MAAM;YAAE,gBAAgB;YAAO,kBAAkB;QAAM;QACvD,QAAQ;YAAE,SAAS,CAAC;QAAE;IACxB;AAEJ","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/api/events/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { createSupabaseServerAnon  } from '../../../../lib/supabase/anon-server';\r\n\r\nexport const runtime = 'nodejs';\r\nexport const dynamic = 'force-dynamic';\r\nexport const revalidate = 0;\r\n\r\nexport async function GET() {\r\n  const supabase = createSupabaseServerAnon();\r\n\r\n  const { data: userCheck } = await supabase.auth.getUser();\r\n\r\n  const { data: who } = await supabase.rpc('whoami');\r\n  console.log('whoami =>', who);\r\n\r\n  console.log('GET /api/events as anon, user?', userCheck?.user);\r\n  const { data, error } = await supabase\r\n    .from('events_with_status')\r\n    .select('id,title,subheading,description,image_url,publish_at,unpublish_at,computed_status,\"order\",updated_at,starts_at,ends_at,published')\r\n    .eq('computed_status', 'live')\r\n    .order('order', { ascending: true })\r\n    .order('publish_at', { ascending: false, nullsFirst: true });\r\n\r\n  if (error) return NextResponse.json({ error: error.message }, { status: 500 });\r\n  return NextResponse.json({ isAnon: !userCheck?.user, items: data });\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAChB,MAAM,UAAU;AAChB,MAAM,aAAa;AAEnB,eAAe;IACpB,MAAM,WAAW,CAAA,GAAA,mIAAA,CAAA,2BAAwB,AAAD;IAExC,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAEvD,MAAM,EAAE,MAAM,GAAG,EAAE,GAAG,MAAM,SAAS,GAAG,CAAC;IACzC,QAAQ,GAAG,CAAC,aAAa;IAEzB,QAAQ,GAAG,CAAC,kCAAkC,WAAW;IACzD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,sBACL,MAAM,CAAC,oIACP,EAAE,CAAC,mBAAmB,QACtB,KAAK,CAAC,SAAS;QAAE,WAAW;IAAK,GACjC,KAAK,CAAC,cAAc;QAAE,WAAW;QAAO,YAAY;IAAK;IAE5D,IAAI,OAAO,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO,MAAM,OAAO;IAAC,GAAG;QAAE,QAAQ;IAAI;IAC5E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,QAAQ,CAAC,WAAW;QAAM,OAAO;IAAK;AACnE","debugId":null}}]
}