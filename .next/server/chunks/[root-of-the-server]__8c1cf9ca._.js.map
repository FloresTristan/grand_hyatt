{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/lib/supabase/server.ts"],"sourcesContent":["\r\nimport { cookies } from 'next/headers';\r\nimport { createServerClient, type CookieOptions } from '@supabase/ssr';\r\n\r\nexport async function createSupabaseServer() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      auth: {\r\n        autoRefreshToken: false,\r\n        persistSession: true, // keep reading/writing sb- cookies via the handlers below\r\n      },\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch {\r\n            // no-op in RSC (only works in route handlers/actions)\r\n          }\r\n        },\r\n        remove(name: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value: '', ...options });\r\n          } catch {\r\n            // no-op in RSC\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;QACA,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAM;gBACN,sDAAsD;gBACxD;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAM;gBACN,eAAe;gBACjB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/api/admin/seasons/set_season/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { createSupabaseServer } from '../../../../../../../lib/supabase/server';\r\n\r\nexport const runtime = 'nodejs';\r\nexport const dynamic = 'force-dynamic';\r\nexport const revalidate = 0;\r\n\r\ntype Ctx = { params: { id: string } };\r\n\r\nexport async function PATCH(_req: Request, ctx: { params: Promise<{ id: string }> }) {\r\n  try {\r\n    const { id } = await ctx.params;\r\n    const supabase = await createSupabaseServer();\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n\r\n    const idParam = (id || '').trim().toLowerCase();\r\n\r\n    // If id is \"none\" (or \"null\"), clear the active season\r\n    const newValue = (idParam === 'none' || idParam === 'null') ? null : id;\r\n\r\n    const { error: upErr } = await supabase\r\n      .from('season_state')\r\n      .update({ active_season: newValue })\r\n      .eq('id', 1);\r\n\r\n    if (upErr) return NextResponse.json({ error: upErr.message }, { status: 403 });\r\n\r\n    // If we cleared, just return ok\r\n    if (newValue === null) return NextResponse.json({ ok: true, item: null });\r\n\r\n    // Otherwise return the chosen season with computed flag\r\n    const { data: season, error: selErr } = await supabase\r\n      .from('seasons_with_active')\r\n      .select('id,name,image_url,is_active,updated_at')\r\n      .eq('id', newValue)\r\n      .single();\r\n\r\n    if (selErr) return NextResponse.json({ error: selErr.message }, { status: 500 });\r\n    return NextResponse.json({ ok: true, item: season });\r\n  } catch (e: unknown) {\r\n    return NextResponse.json({ error: e instanceof Error? e?.message : 'Server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(_req: Request, ctx: { params: Promise<{ id: string }> }) {\r\n  try {\r\n    const { id } = await ctx.params;\r\n    const supabase = await createSupabaseServer();\r\n    const { data: { user } } = await supabase.auth.getUser();\r\n    if (!user) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n\r\n    // const id = params.id?.trim();\r\n    if (!id) return NextResponse.json({ error: 'Missing season id' }, { status: 400 });\r\n\r\n    // Get row first to find the image URL (best-effort cleanup)\r\n    const { data: row, error: selErr } = await supabase\r\n      .from('seasons')\r\n      .select('id,image_url')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (selErr) return NextResponse.json({ error: selErr.message }, { status: 404 });\r\n\r\n    // Delete DB row\r\n    const { error: delErr } = await supabase.from('seasons').delete().eq('id', id);\r\n    if (delErr) return NextResponse.json({ error: delErr.message }, { status: 500 });\r\n\r\n    // If the deleted season was active, season_state.active_season is auto-cleared by FK (ON DELETE SET NULL)\r\n\r\n    // Try to remove image from Storage if itâ€™s in our bucket\r\n    if (row?.image_url) {\r\n      try {\r\n        const objectPath = toStoragePath(row.image_url, 'seasons');\r\n        if (objectPath) {\r\n          await supabase.storage.from('seasons').remove([objectPath]);\r\n        }\r\n      } catch {\r\n        // ignore storage cleanup errors\r\n      }\r\n    }\r\n\r\n    return NextResponse.json({ ok: true, id });\r\n  } catch (e: unknown) {\r\n    return NextResponse.json({ error: e instanceof Error? e?.message : 'Server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nfunction toStoragePath(imageUrl: string, bucket = 'seasons'): string | null {\r\n  try {\r\n    const u = new URL(imageUrl);\r\n    const prefix = `/storage/v1/object/public/${bucket}/`;\r\n    const idx = u.pathname.indexOf(prefix);\r\n    if (idx === -1) return null;\r\n    // object name inside the bucket\r\n    const raw = u.pathname.slice(idx + prefix.length);\r\n    return decodeURIComponent(raw);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}