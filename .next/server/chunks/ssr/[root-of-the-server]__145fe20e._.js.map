{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/components/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/components/navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/lib/supabase/admin.ts"],"sourcesContent":["\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nexport function createSupabaseAdmin() {\r\n  return createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.SUPABASE_SERVICE_ROLE_KEY! \r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,gFAEhB,QAAQ,GAAG,CAAC,yBAAyB;AAEzC","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/lib/supabase/server.ts"],"sourcesContent":["\r\nimport { cookies } from 'next/headers';\r\nimport { createServerClient, type CookieOptions } from '@supabase/ssr';\r\n\r\nexport async function createSupabaseServer() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      auth: {\r\n        autoRefreshToken: false,\r\n        persistSession: true, // keep reading/writing sb- cookies via the handlers below\r\n      },\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch {\r\n            // no-op in RSC (only works in route handlers/actions)\r\n          }\r\n        },\r\n        remove(name: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value: '', ...options });\r\n          } catch {\r\n            // no-op in RSC\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;QACA,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAM;gBACN,sDAAsD;gBACxD;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAM;gBACN,eAAe;gBACjB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/providers/UserProviders.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const UserProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call UserProvider() from the server but UserProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers/UserProviders.tsx <module evaluation>\",\n    \"UserProvider\",\n);\nexport const useUser = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUser() from the server but useUser is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers/UserProviders.tsx <module evaluation>\",\n    \"useUser\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qEACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qEACA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/providers/UserProviders.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const UserProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call UserProvider() from the server but UserProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers/UserProviders.tsx\",\n    \"UserProvider\",\n);\nexport const useUser = registerClientReference(\n    function() { throw new Error(\"Attempted to call useUser() from the server but useUser is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers/UserProviders.tsx\",\n    \"useUser\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iDACA;AAEG,MAAM,UAAU,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,iDACA","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mata/Documents/GitHub/grand_hyatt/src/app/admin/layout.tsx"],"sourcesContent":["import { ReactNode } from 'react';\r\nimport { redirect, notFound } from 'next/navigation';\r\nimport NavBar from '../components/navbar';\r\nimport { createSupabaseAdmin } from '../../../lib/supabase/admin';\r\nimport { createSupabaseServer } from '../../../lib/supabase/server'\r\nimport { UserProvider } from '../providers/UserProviders';\r\n\r\n\r\nexport const dynamic = 'force-dynamic';\r\nexport const revalidate = 0;\r\n\r\nexport default async function AdminLayout({ children }: { children: ReactNode }) {\r\n  const admin = createSupabaseAdmin();\r\n  const { count: profilesCount, error: profilesErr } = await admin\r\n    .from('profiles')\r\n    .select('id', { head: true, count: 'exact' });\r\n  if (profilesErr) {\r\n    console.log(\"error\", profilesErr)\r\n  }\r\n  if ((profilesCount ?? 0) === 0) {\r\n    console.log(profilesCount)\r\n    redirect('/signup'); \r\n  }\r\n\r\n  const supabase = await createSupabaseServer();\r\n  const { data: { user } } = await supabase.auth.getUser();\r\n  if (!user) redirect('/login');\r\n\r\n  const role = (user.app_metadata as { role?: string })?.role ?? 'user';\r\n  if (role !== 'super-admin' && role !== 'admin' && role !== 'editor') notFound();\r\n\r\n  return (\r\n    <>\r\n      <NavBar role={role} />\r\n      <UserProvider initialUser={user}>\r\n      {children}\r\n      </UserProvider>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa;AAEX,eAAe,YAAY,EAAE,QAAQ,EAA2B;IAC7E,MAAM,QAAQ,CAAA,GAAA,wHAAA,CAAA,sBAAmB,AAAD;IAChC,MAAM,EAAE,OAAO,aAAa,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,MACxD,IAAI,CAAC,YACL,MAAM,CAAC,MAAM;QAAE,MAAM;QAAM,OAAO;IAAQ;IAC7C,IAAI,aAAa;QACf,QAAQ,GAAG,CAAC,SAAS;IACvB;IACA,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG;QAC9B,QAAQ,GAAG,CAAC;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,MAAM,WAAW,MAAM,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD;IAC1C,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IACtD,IAAI,CAAC,MAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAEpB,MAAM,OAAO,AAAC,KAAK,YAAY,EAAwB,QAAQ;IAC/D,IAAI,SAAS,iBAAiB,SAAS,WAAW,SAAS,UAAU,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAE5E,qBACE;;0BACE,8OAAC,mIAAA,CAAA,UAAM;gBAAC,MAAM;;;;;;0BACd,8OAAC,yIAAA,CAAA,eAAY;gBAAC,aAAa;0BAC1B;;;;;;;;AAIP","debugId":null}}]
}